{% set name = "openmp_impl" %}
{% set version = "9.0.1" %}
{% set sha256 = "5c94060f846f965698574d9ce22975c0e9f04c9b14088c3af5f03870af75cace" %}
{% set openmp_ver = "4.5" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

build:
  number: 1
  skip: true  # [win and vc<14]

outputs:
  - name: openmp_impl
    script: build-openmp_impl.sh
    version: {{ openmp_ver }}
    requirements:
      host:
        - llvm-openmp >=9.0.1
      run:
        - llvm-openmp >=9.0.1
        # the selector here serves no real purpose, but conda appears
        # to error without it, so here we are
        - _libgcc_mutex {{ _libgcc_mutex }}  # [linux]
    build:
      string: 0_llvm
      skip: True  # [not linux]
      always_include_files:
        # this major version has to match the libgomp version from gcc
        - lib/libgomp.so.1
      track_features:
        - llvm_openmp
      ignore_run_exports:
        - openmp_impl
    about:
      summary: OpenMP Implementation Mutex
      license: BSD-3-Clause
      license_file: LICENSE
      home: https://github.com/conda-forge/openmp-feedstock
    test:
      requires:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      commands:
        - test -f $PREFIX/lib/libgomp.so.1
        - if [ ! "$PREFIX/lib/libgomp.so.1" -ef "$PREFIX/lib/libomp.so" ]; then exit 1; fi
        - rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello
        - ldd omp_hello  # [linux]
        - rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello
        - ldd omp_hello  # [linux]
      files:
        - omp_hello.c

# here to please the linter - not used
about:
  home: http://openmp.llvm.org/
  license: NCSA
  license_file: LICENSE.txt
  summary: The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran.

extra:
  recipe-maintainers:
    - inducer
    - jakirkham
    - yesimon
    - isuruf
    - beckermr
