{% set name = "llvm-openmp" %}
{% set version = "8.0.0" %}
{% set sha256 = "f7b1705d2f16c4fc23d6531f67d2dd6fb78a077dd346b02fed64f4b8df65c9d5" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: http://releases.llvm.org/{{ version }}/openmp-{{ version }}.src.tar.xz
  sha256: {{ sha256 }}
  patches:
    - D65714.patch

build:
  number: 1
  skip: true  # [win and vc<14]

test:
  requires:
    - clangdev
    - {{ compiler('cxx') }}  # [linux]
  commands:
    - if not exist %LIBRARY_BIN%\\libomp.dll exit 1   # [win]
    - test -f $PREFIX/lib/libomp.so                   # [linux]
    - test -f $PREFIX/lib/libomp.dylib                # [osx]
    - if not exist %LIBRARY_LIB%\\libomp.lib exit 1   # [win]
    - if not exist %LIBRARY_INC%\\omp.h exit 1        # [win]
    - test -f $PREFIX/include/omp.h                   # [unix]
    - $PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello  # [not win]
    - "%LIBRARY_BIN%\\clang -v -fopenmp -I%LIBRARY_INC% -L%LIBRARY_LIB% omp_hello.c -o omp_hello.exe"  # [win]
    - ./omp_hello            # [unix]
    - "%cd%\\omp_hello.exe"  # [win]
  files:
    - omp_hello.c

outputs:
  - name: llvm-openmp
    script: build-llvm-openmp.sh  # [not win]
    script: bld-llvm-openmp.bat   # [win]
    requirements:
      build:
        - {{ compiler("cxx") }}
        - cmake
        - perl
        - ninja  # [win]
      host:
        - llvmdev {{ version }}|{{ version }}.*
      run_constrained:
        - clangdev {{ version }}|{{ version }}.*
        - llvmdev {{ version }}|{{ version }}.*
        - openmp {{ version }}|{{ version }}.*

  - name: openmp
    requirements:
      run:
        - {{ pin_subpackage("llvm-openmp", exact=True) }}

about:
  home: http://openmp.llvm.org/
  license: NCSA
  license_file: LICENSE.txt
  summary: The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran.

extra:
  recipe-maintainers:
    - inducer
    - jakirkham
    - yesimon
    - isuruf
